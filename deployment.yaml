apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-trim-deployment
  labels:
    app: kube-trim
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-trim
  template:
    metadata:
      labels:
        app: kube-trim
    spec:
      serviceAccountName: kube-trim-sa
      containers:
      - name: kube-trim
        image: 513971506177.dkr.ecr.us-west-2.amazonaws.com/kube_trim:latest
        ports:
        - containerPort: 8069
        env:
        - name: FLASK_ENV
          value: "production"
        - name: FLASK_APP
          value: "kube_trim.server:create_app"
---
apiVersion: v1
kind: Service
metadata:
  name: kube-trim-service
  labels:
    app: kube-trim
spec:
  type: NodePort
  ports:
  - port: 8069
    targetPort: 8069
    protocol: TCP
    nodePort: 30069
  selector:
    app: kube-trim
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-trim-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-trim-role
rules:
- apiGroups: [""]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-trim-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-trim-role
subjects:
- kind: ServiceAccount
  name: kube-trim-sa
  namespace: default